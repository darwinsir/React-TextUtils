{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","dist","href","siteName","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","to","navItem1","navItem2","role","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","text2","setText2","stringifyText","JSON","parse","stringify","split","list","Fragment","style","color","rel","heading","navigator","clipboard","writeText","showAlert","display","justifyContent","width","value","backgroundColor","onChange","event","target","placeholder","rows","cols","onKeyUp","onKeyDown","formcontrolname","gridTemplateColumns","length","newText","toUpperCase","toLowerCase","forEach","desh","push","charAt","slice","test","join","defaultProps","About","aria-labelledby","data-bs-parent","Alert","word","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","title","components_Alert","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.68a16a2f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" href=\"/\">{props.siteName}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.navItem1}</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.navItem2}</Link>\r\n              </li>\r\n              <li className=\"nav-item dropdown\">\r\n                <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\">\r\n                  Usage Guide\r\n                </a>\r\n                <ul className=\"dropdown-menu\">\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                  <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                  <li>\r\n                    <hr className=\"dropdown-divider\"/>\r\n                  </li>\r\n                  <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role='switch' aria-checked=\"true\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode==='light'?'dark':'light'}Mode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\n            // <form className=\"d-flex\" role=\"search\">\r\n            //   <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            //   <button className=\"btn btnnpm-primary\" type=\"submit\">Search</button>\r\n            // </form>\r\nNavbar.propTypes = {\r\n  siteName: PropTypes.string.isRequired,\r\n  navItem1: PropTypes.string,\r\n  navItem2: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  siteName: 'siteName',\r\n  navItem1: 'naveItem1',\r\n  navItem2: 'naveItem2'\r\n}\r\n              ","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=>{\r\n    // console.log('Boss handleUpclick function is turned on')\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert('Your whole data is converted to UpperCase','success')\r\n  }\r\n  const handleDownClick = ()=>{\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert('Your whole data is converted to lowercase','success')\r\n  }\r\n  const handleOnChange = (event) =>{\r\n    // console.log('Changing in progress');\r\n    // setText('')\r\n    setText(event.target.value)\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  // buttons\r\n  const onKeyPress = ()=>{\r\n    setText2('Stopped')\r\n  }\r\n  const onKeyDown = ()=>{\r\n    setText2('Writing...')\r\n  }\r\n  const toReset = ()=>{\r\n    setText('')\r\n    props.showAlert('TextArea is Resetted','success')\r\n  }\r\n  const copy = ()=>{\r\n    navigator.clipboard.writeText(text)\r\n    props.showAlert('Your text is copied','success')\r\n}\r\n\r\n  \r\n  const [text, setText] = useState('');\r\n  const [text2,setText2] = useState('')\r\n  let stringifyText = JSON.parse(JSON.stringify((text.split(' '))))\r\n  let list = []\r\n\r\n \r\n  const titleForm =() =>{\r\n  stringifyText.forEach(desh => {\r\n  //   list.push(desh)\r\n      return list.push(desh.charAt(0).toUpperCase() + desh.slice(1));\r\n    })\r\n    const test = list.join(' ')\r\n    // console.log(test)\r\n    setText(test)\r\n    props.showAlert(\"Your whole data changed to Title Form\",'success')\r\n  }\r\n  \r\nconst extraSpaceRemover = ()=>{\r\n  let newText = text.split(/[ ]+/)\r\n  setText(newText.join(' '))\r\n  props.showAlert('All Extra spaces are removed from Your Data','success')\r\n}\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-1\" style={{color: props.mode==='light'?'black':'#dcc2c2'}} >\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n    <h1>{props.heading}</h1>\r\n    <div className='material-symbols-outlined little-Border'><div onClick={copy} style={{display: 'flex',justifyContent: 'end', width:'100%'}}>\r\n<span className=\"material-symbols-outlined\" style={{display:'flex'}}>\r\ncontent_copy\r\n</span>\r\n</div></div>\r\n    <div className=\"form-floating\" >\r\n    <textarea className=\"form-control textarea\" value={text} style={{backgroundColor: props.mode ==='dark'?'whitesmoke':'#rgb(235 210 210)',color: 'black'}} onChange={handleOnChange} placeholder=\"Enter the Text\" id=\"floatingTextarea\" rows={100} cols={150} onKeyUp={onKeyPress} onKeyDown={onKeyDown} formcontrolname=\"txt\" ></textarea>\r\n    {/* <label for=\"forMyBox\">Comments</label> */}\r\n    </div><br />\r\n<div style={{display:'grid',gridTemplateColumns:'2fr 2fr'}}><div>{text2}</div>\r\n<div>\r\n  <p style={{display: 'flex',justifyContent: 'end'}}>{0.0032*(text.split(' ').length - 1)} Minutes to read</p>\r\n  <p style={{display: 'flex',justifyContent: 'end'}}>{text.split(' ').length - 1} Words and {text.length} Characters</p>\r\n</div>\r\n</div><br />\r\n<button className=\"btn btn-primary\" onClick={handleUpClick}>convert to upper case</button>\r\n<button className=\"btn btn-primary\" id='side-btn' onClick={handleDownClick}>convert to lowecase</button>\r\n<button className=\"btn btn-primary\" id='side-btn' onClick={toReset}>Clear Text Area</button>\r\n<button className=\"btn btn-primary\" id='side-btn' onClick={titleForm}>Title form</button>\r\n<button className=\"btn btn-primary\" id='side-btn' onClick={extraSpaceRemover}>Extra Space Remover</button>\r\n<div className='my-5'>\r\n<h2>Preview</h2>\r\n<p className='preview'>{text.length>0?text.slice(0,280)+'....':'Enter the text to preview'}</p></div>\r\n</div>\r\n\r\n</>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <>\r\n            <div className=\"accordion my-5\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase()+ word.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","// import logo from './logo.svg';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport './App.css';\nimport './boot.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\n\n// let name = 'harry'\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#353232'\n      showAlert('Dark mode has been enabled', 'success')\n      document.title = 'TextUtils -- DarkMode On';\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('light mode has been enabled', 'success')\n      document.title = 'TextUtils -- DarkMode Off'\n    }\n    setTimeout(() => {\n      document.title = 'TextUtils -- Home'\n    }, 3000);\n  }\n  return (\n    <>\n      <Router>\n        <Navbar siteName='Capitilizer App' mode={mode} navItem1='Home' navItem2='About ' toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-1\">\n          <Routes>\n            <Route path='about' element={<About />} />\n          </Routes>\n          <Routes>\n            <Route path='/' element={<TextForm showAlert={showAlert} heading='Enter the text to analyze' mode={mode} />} />\n          </Routes>\n        </div>\n      </Router>\n\n    </>\n  )\n  {/* <Navbar /> */}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}